apply plugin: 'com.google.protobuf'

group = 'com.mall'
version = '1.0.0'
sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // discovery-service
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:${rootProject.ext.springCloudEurekaVersion}"

    // config-service
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    // embedded-redis
    implementation group: 'it.ozimov', name: 'embedded-redis', version: "${rootProject.ext.embeddedRedisVersion}"

    // open-feign : https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-openfeign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // circuitbreaker-resilience4j
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    // sleuth
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    // zipkin
    implementation "org.springframework.cloud:spring-cloud-starter-zipkin:${rootProject.ext.zipkinVersion}"
    // micorometer
    implementation "io.micrometer:micrometer-registry-prometheus:${rootProject.ext.micrometerVersion}"


    // reactor-core : https://mvnrepository.com/artifact/io.projectreactor/reactor-core
    implementation "io.projectreactor:reactor-core:${reactorCoreVersion}"

    // r2dbc : https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-r2dbc
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    // r2dbc spi : https://mvnrepository.com/artifact/io.r2dbc/r2dbc-spi
    implementation 'io.r2dbc:r2dbc-spi'
    // r2dbc-pool : https://mvnrepository.com/artifact/io.r2dbc/r2dbc-pool
    implementation 'io.r2dbc:r2dbc-pool'

    // maria db
    // r2dbc-mariadb : https://mvnrepository.com/artifact/org.mariadb/r2dbc-mariadb
    implementation 'org.mariadb:r2dbc-mariadb'

    // h2
    // https://mvnrepository.com/artifact/io.r2dbc/r2dbc-h2
    //required runtime -> compile for run h2 server in the webfluxW
    implementation 'io.r2dbc:r2dbc-h2'
    //compileOnly 'com.h2database:h2'

    // jwt : https://mvnrepository.com/artifact/com.auth0/java-jwt
    implementation "com.auth0:java-jwt:${rootProject.ext.jsonWebTokenVersion}"

    // grpc
    implementation "net.devh:grpc-server-spring-boot-starter:${rootProject.ext.springBootGrpcVersion}"
    implementation "io.grpc:grpc-netty:${rootProject.ext.grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${rootProject.ext.grpcVersion}"
    implementation "io.grpc:grpc-stub:${rootProject.ext.grpcVersion}"


    // guava : https://mvnrepository.com/artifact/com.google.guava/guava
    implementation group: 'com.google.guava', name: 'guava', version: "${rootProject.ext.guavaVersion}"
    implementation "com.googlecode.json-simple:json-simple:${rootProject.ext.jsonSimpleVersion}"

    // swagger
    implementation "io.springfox:springfox-boot-starter:${rootProject.ext.swaggerVersion}"
    implementation "io.springfox:springfox-swagger-ui:${rootProject.ext.swaggerVersion}"
    implementation "io.springfox:springfox-spring-webflux:${rootProject.ext.swaggerVersion}"


    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${rootProject.ext.springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}
